name: CI for Laravel with Docker

on:
  push:
    branches:
      - master  # Trigger on push to master
  pull_request:
    branches:
      - master  # Trigger on pull request to master

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      # PostgreSQL service for your Laravel project
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: your_user
          POSTGRES_PASSWORD: your_password
          POSTGRES_DB: your_database
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready -U your_user" --health-timeout=30s --health-retries=3

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up PHP environment
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'  # Set your PHP version
          extensions: mbstring, bcmath, xml, ctype, json, gd, pdo, pdo_pgsql

      # Step 3: Install Composer dependencies
      - name: Install dependencies
        run: |
          curl -sS https://getcomposer.org/installer | php
          php composer.phar install --no-interaction --prefer-dist --optimize-autoloader

      # Step 4: Set up environment file and Docker configuration
      - name: Set up .env file
        run: |
          cp .env.example .env
          sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=pgsql/' .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_PORT=3306/DB_PORT=5432/' .env
          sed -i 's/DB_DATABASE=homestead/DB_DATABASE=your_database/' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=your_user/' .env
          sed -i 's/DB_PASSWORD=secret/DB_PASSWORD=your_password/' .env

      # Step 5: Start Docker services
      - name: Start Docker services
        run: |
          docker-compose up -d

      # Step 6: Run migrations
      - name: Run migrations
        run: |
          php artisan migrate --force

      # Step 7: Run tests
      - name: Run tests
        run: |
          vendor/bin/phpunit --coverage-text

      # Step 8: Deploy (if needed, example for SSH deployment)
      - name: Deploy
        if: github.ref == 'refs/heads/master'
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "cd /path/to/your/project && git pull origin master && composer install && php artisan migrate"
